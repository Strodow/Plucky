YourProject/
├── .gitignore                  # Specifies intentionally untracked files for Git (e.g., __pycache__, .env, virtual environment folders)
├── main.py                     # Application entry point: initializes QApplication, creates and shows MainWindow
├── README.md                   # Project overview, setup instructions, usage guide, and other relevant information
├── requirements.txt            # Lists project dependencies for easy installation (e.g., using `pip install -r requirements.txt`)
│
├── config/                     # Configuration files and modules
│   ├── __init__.py             # Makes 'config' a Python package
│   └── settings.py             # Application-specific settings (e.g., default paths, API keys, feature flags, UI themes)
│
├── core/                       # Core application logic, state management, and business rules (non-UI specific)
│   ├── __init__.py             # Makes 'core' a Python package
│   ├── presentation_manager.py # Manages presentation state, slide transitions, and overall application flow orchestration
│   └── presentation_io.py      # Handles serialization/deserialization of presentation data (e.g., to JSON, XML, or custom binary format for save/load)
│
├── data_models/                # Python modules defining data structures (e.g., using @dataclass or Pydantic)
│   ├── __init__.py             # Makes 'data_models' a Python package
│   └── slide_data.py           # Defines the SlideData class and other related data structures for slides
│
├── rendering/                  # Modules responsible for visual rendering logic
│   ├── __init__.py             # Makes 'rendering' a Python package
│   └── slide_renderer.py       # Defines SlideRenderer class with methods to draw slides onto a QPaintDevice or similar canvas
│
├── resources/                  # Static assets like UI files, images, icons, fonts, etc.
│   ├── __init__.py             # (Optional) Makes 'resources' a package, useful if you need to access resources via `importlib.resources`
│   ├── main_window.ui          # (Optional) UI layout file from Qt Designer for the MainWindow
│   ├── default_background.png  # Example background image resource
│   └── icons/                  # Sub-directory for application icons
│       └── app_icon.png        # Example application icon (e.g., .ico, .png)
│
├── utils/                      # Utility functions, helper classes, and common tools shared across the project
│   ├── __init__.py             # Makes 'utils' a Python package
│   ├── file_helpers.py         # Example: Utilities for file operations (reading, writing, path manipulation, ensuring directories exist)
│   └── logging_config.py       # Configuration for application-wide logging (setup loggers, handlers, formatters)
│
├── widgets/                    # Custom UI Widget modules, extending Qt widgets or creating new interactive elements
│   ├── __init__.py             # Makes 'widgets' a Python package
│   └── scaled_slide_button.py  # Defines the ScaledSlideButton custom widget class
│
├── windows/                    # Modules for main application windows and significant dialogs
    ├── __init__.py             # Makes 'windows' a Python package
    ├── main_window.py          # Defines the MainWindow class (main UI, connects signals/slots, orchestrates interactions between widgets and core logic)
    └── output_window.py        # Defines the OutputWindow class (e.g., for fullscreen presentation display, separate from the main control window)
